Starting audit...
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/table/Table.java:6:18: Parameter player1 should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/table/Table.java:6:34: Parameter player2 should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/table/Table.java:11:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'getPlayer1' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'getPlayer1' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/table/Table.java:15:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'getPlayer2' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'getPlayer2' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/table/Table.java:19:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'setPlayer1' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'setPlayer1' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/table/Table.java:19:28: Parameter player1 should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/table/Table.java:23:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'setPlayer2' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'setPlayer2' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/table/Table.java:23:28: Parameter player2 should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/table/Player.java:19:19: Parameter decks should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/table/Player.java:29:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getNoDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getNoDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/table/Player.java:33:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getTotalDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getTotalDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/table/Player.java:37:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/table/Player.java:41:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getFirstRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getFirstRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/table/Player.java:45:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getSecondRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getSecondRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/table/Player.java:49:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/table/Player.java:53:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setNoDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setNoDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/table/Player.java:53:28: Parameter noDecks should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/table/Player.java:57:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setTotalDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setTotalDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/table/Player.java:57:31: Parameter totalDecks should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/table/Player.java:61:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/table/Player.java:61:25: Parameter hero should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/table/Player.java:65:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setFirstRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setFirstRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/table/Player.java:65:29: Parameter firstRow should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/table/Player.java:69:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setSecondRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setSecondRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/table/Player.java:69:30: Parameter secondRow should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/table/Player.java:73:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/table/Player.java:73:25: Parameter hand should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/EmpressThorina.java:8:5: Class 'EmpressThorina' looks like designed for extension (can be subclassed), but the method 'heroAction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EmpressThorina' final or making the method 'heroAction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/EmpressThorina.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/EmpressThorina.java:8:28: Parameter cards should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/EmpressThorina.java:10:22: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/EmpressThorina.java:11:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/EmpressThorina.java:20:27: Parameter card should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Minion.java:11:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Minion.java:15:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Minion.java:19:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Minion.java:23:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Minion.java:23:27: Parameter health should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Minion.java:27:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Minion.java:27:33: Parameter attackDamage should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Minion.java:31:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Minion.java:31:27: Parameter frozen should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Minion.java:35:19: Parameter card should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Hero.java:8:26: '30' is a magic number. [MagicNumber]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Hero.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Hero.java:11:17: Parameter card should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Hero.java:15:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Hero.java:19:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Hero.java:19:27: Parameter health should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Card.java:13:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Card.java:17:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Card.java:21:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Card.java:25:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Card.java:29:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Card.java:29:25: Parameter mana should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Card.java:33:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Card.java:33:32: Parameter description should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Card.java:37:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Card.java:37:27: Parameter colors should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Card.java:41:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Card.java:41:25: Parameter name should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Card.java:45:17: Parameter card should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/KingMudface.java:8:5: Class 'KingMudface' looks like designed for extension (can be subclassed), but the method 'heroAction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'KingMudface' final or making the method 'heroAction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/KingMudface.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/KingMudface.java:8:28: Parameter cards should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/KingMudface.java:9:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/KingMudface.java:13:24: Parameter card should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/LordRoyce.java:8:5: Class 'LordRoyce' looks like designed for extension (can be subclassed), but the method 'heroAction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LordRoyce' final or making the method 'heroAction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/LordRoyce.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/LordRoyce.java:8:28: Parameter cards should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/LordRoyce.java:11:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/LordRoyce.java:17:17: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/LordRoyce.java:20:22: Parameter card should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/TheCursedOne.java:6:18: Name 'Shapeshift' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/TheCursedOne.java:6:29: Parameter minion should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/TheCursedOne.java:13:25: Parameter card should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Environment.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Environment.java:10:24: Parameter card should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/HeartHound.java:8:5: Class 'HeartHound' looks like designed for extension (can be subclassed), but the method 'environmentAction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HeartHound' final or making the method 'environmentAction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/HeartHound.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/HeartHound.java:8:35: Parameter cardsLoser should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/HeartHound.java:8:63: Parameter cardsWinner should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/HeartHound.java:11:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/HeartHound.java:22:23: Parameter card should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/GeneralKocioraw.java:8:5: Class 'GeneralKocioraw' looks like designed for extension (can be subclassed), but the method 'heroAction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GeneralKocioraw' final or making the method 'heroAction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/GeneralKocioraw.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/GeneralKocioraw.java:8:28: Parameter cards should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/GeneralKocioraw.java:9:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/GeneralKocioraw.java:13:28: Parameter card should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Miraj.java:6:18: Name 'SkyJack' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Miraj.java:6:26: Parameter minion should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Miraj.java:12:18: Parameter card should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/TheRipper.java:6:22: Parameter card should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/TheRipper.java:10:18: Name 'WeakKnees' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/TheRipper.java:10:28: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/TheRipper.java:10:29: Parameter minion should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Disciple.java:6:18: Name 'GodsPlan' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Disciple.java:6:27: Parameter minion should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Disciple.java:10:21: Parameter card should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Winterfell.java:8:5: Class 'Winterfell' looks like designed for extension (can be subclassed), but the method 'environmentAction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Winterfell' final or making the method 'environmentAction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Winterfell.java:9:35: Parameter cards1 should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Winterfell.java:9:59: Parameter cards2 should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Winterfell.java:10:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Winterfell.java:14:23: Parameter card should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Deck.java:11:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'getTotalCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'getTotalCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Deck.java:15:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'getNoCardsInDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'getNoCardsInDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Deck.java:19:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'setTotalCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'setTotalCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Deck.java:19:31: Parameter totalCards should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Deck.java:23:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'setNoCardsInDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'setNoCardsInDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Deck.java:23:34: Parameter noCardsInDeck should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Deck.java:27:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Deck.java:27:29: Parameter deck should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Deck.java:27:40: Parameter seed should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Deck.java:31:17: Parameter noCardsInDeck should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Deck.java:31:36: Parameter cards should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Deck.java:32:27: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Firestorm.java:8:5: Class 'Firestorm' looks like designed for extension (can be subclassed), but the method 'environmentAction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Firestorm' final or making the method 'environmentAction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Firestorm.java:9:35: Parameter cards1 should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Firestorm.java:9:59: Parameter cards2 should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Firestorm.java:10:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/cards/Firestorm.java:14:22: Parameter card should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/game/PrepareGamers.java:3:8: Unused import - cards.Deck. [UnusedImports]
[ERROR] /home/maria/Documents/school-work/OOP/OOP-Project1.git/tema/./src/game/PrepareGamers.java:11:26: Parameter input should be final. [FinalParameters]
Audit done.
Checkstyle ends with 123 errors.
